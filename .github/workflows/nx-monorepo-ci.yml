name: NX monorepo CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci

      # - run: npx nx format:check --base=origin/main
      # - run: npx nx affected -t lint --parallel=3 --base=origin/main
      # - run: npx nx affected -t test --parallel=3 --configuration=ci --base=origin/main --coverage --coverageReporters=json,json-summary
      # - run: npx nx affected -t build --parallel=3 --base=origin/main

      - run: 'git branch --track ${{github.base_ref}} origin/${{github.base_ref}}'
      - run: 'git branch --track ${{github.head_ref}} origin/${{github.head_ref}}'
      - run: npx nx format:check --base=${{ github.base_ref }} --head=${{ github.head_ref }}
      - run: npx nx affected:lint --base=${{ github.base_ref }} --head=${{ github.head_ref }}
      - run: npx nx affected:test --base=${{  github.base_ref }} --head=${{ github.head_ref }} --configuration=ci --coverage --coverageReporters=json,json-summary,lcov
      - run: npx nx affected:build --base=${{  github.base_ref }} --head=${{ github.head_ref }}

      - uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage

      - run: node merge-coverage-json.js

      # Hack
      - run: mv coverage/coverage-summary.json coverage-summary.json

      - run: npx nyc report --reporter text -t coverage > ./coverage/coverage.txt

      - run: cat ./coverage/coverage.txt

      - name: Jest Coverage Comment
        id: coverageComment
        uses: MishaKav/jest-coverage-comment@main
        with:
          # coverage-summary-path: ./coverage-summary.json
          # multiple-files: fromJson( ${{ env.testCoverageJsonFiles }} )
          multiple-files: '${{ env.testCoverageJsonFiles }}'
          # multiple-files: |
          #   app1, ./coverage/apps/app1/coverage-summary.json
          #   app2, ./coverage/apps/app2/coverage-summary.json
          coverage-path: ./coverage/coverage.txt

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.build-publish.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # - name: install deps
      #   run: npm ci

      - id: build-publish
        uses: bitovi/github-actions-react-to-ghp@v1.2.0
        with:
          path: dist/storybook/app1
          build_command: npx nx run app1:build-storybook
